{"version":3,"sources":["Utility.js","Splitwatch.js","GenericSet.js","LayoutFactory.js","Statistics.js","NumericSet.js","Timestamp.js","Stopwatch.js","Layout.js","ProjectData.js","FileDialogue.js","Toolbar.js","FileDropzone.js","App.js","index.js"],"names":["Utility","replace","c","r","Math","random","toString","names","floor","length","colors","Splitwatch","props","state","results","dataSet","i","label","Name","start","StartTime","toFixed","finish","EndTime","duration","Duration","push","tableData","this","map","data","index","className","key","Component","windowData","title","type","component","tooltip","GenericSet","variableName","variableType","value","Object","keys","name","Time","prettyPrintValue","Value","LayoutFactory","files","contents","config","undefined","projectData","onLayoutBuilt","windowCount","parseFile","record","memberCount","Data","VariableName","VariableType","evt","input","JSON","parse","target","result","Records","ProjectData","windowContent","DisplayType","constructSet","constructSplitwatch","constructStopwatch","constructTimestamp","console","log","dimensions","borderWidth","minItemHeight","minItemWidth","headerHeight","dragProxyWidth","dragProxyHeight","labels","close","maximise","minimise","popout","content","file","reader","FileReader","onload","assignContents","onerror","readAsText","Statistics","dataset","stats","generateStatistics","average","median","max","min","stddev","sum","Infinity","Number","NEGATIVE_INFINITY","range","stdvalues","val","stdsum","sqrt","half","NumericSet","xAxisLabel","yAxisLabel","chartSet","canvasID","generateUUID","id","aria-label","role","ctx","document","getElementById","getContext","Chart","datasets","backgroundColor","randomChartColor","borderColor","fill","options","responsive","display","text","tooltips","mode","intersect","hover","scales","xAxes","scaleLabel","labelString","yAxes","drawChart","Timestamp","time","Stopwatch","Layout","hasRendered","factory","element","e","layout","GoldenLayout","registerComponent","on","tab","attr","contentItem","init","parentCallback","build","nextProps","nextState","drawLayout","hc","window","innerHeight","style","height","unityVersion","constructor","Version","Platform","UnityVersion","Author","Date","FileDialogue","handleButtonClick","preventDefault","fileSelector","click","buttonLabel","createElement","setAttribute","buildFileSelector","addEventListener","handleFileSelect","onClick","React","Toolbar","hasFiles","marginLeft","FileDropzone","onDrop","setState","sendData","size","getRootProps","getInputProps","App","onFilesLoaded","acceptedFiles","isInitialized","hasParsed","onFilesParsed","ReactDOM","render"],"mappings":"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","file":"static/js/main.a3ec59bd.chunk.js","sourcesContent":["class Utility {\r\n    static generateUUID()\r\n    {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    static randomDemoWord()\r\n    {\r\n        var names = [\r\n            'computrons',\r\n            'flops',\r\n            'positions',\r\n            'segments',\r\n            'miners',\r\n            'blocks',\r\n            'peripherals',\r\n            'relations',\r\n            'networks'\r\n        ]\r\n\r\n        return names[Math.floor(Math.random() * names.length)];\r\n    }\r\n\r\n    static randomScalingFactor() {\r\n        return Math.floor(Math.random() * (100 + 100)) + 100;\r\n    }\r\n\r\n    static randomChartColor()\r\n    {\r\n        var colors = [\r\n            'rgb(255, 99, 132)',    // red\r\n            'rgb(245, 130, 155)',   // pink\r\n            'rgb(255, 159, 64)',    // orange\r\n            'rgb(255, 127, 80)',    // coral\r\n            'rgb(255, 205, 86)',    // yellow\r\n            'rgb(70, 227, 149)',    // green\r\n            'rgb(112, 235, 96)',    // lime\r\n            'rgb(54, 162, 235)',    // blue\r\n            'rgb(153, 102, 255)',   // purple\r\n            'rgb(218, 98, 240)'     // magenta\r\n        ]\r\n\r\n        return colors[Math.floor(Math.random() * colors.length)];\r\n    }\r\n}\r\n\r\nexport default Utility;","import React, { Component } from 'react';\r\nimport Utility from './Utility';\r\n\r\nclass Splitwatch extends Component {\r\n    static windowData = {\r\n        title: '⏲ Splitwatch',\r\n        type: 'react-component',\r\n        component: 'splitwatch',\r\n        tooltip: 'sequential event durations'\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          results: {}\r\n        }\r\n\r\n        //this.variableName = props.variableName || \"VARIABLE NAME\";\r\n        this.dataSet = [];\r\n\r\n        for (let i = 0; i < props.dataSet.length; i++)\r\n        {\r\n            let label = props.dataSet[i].Name;\r\n            let start = props.dataSet[i].StartTime.toFixed(2);\r\n            let finish = props.dataSet[i].EndTime === -1 ? '-' : props.dataSet[i].EndTime.toFixed(2);\r\n            let duration = props.dataSet[i].Duration.toFixed(2);\r\n            this.dataSet.push({label: label, start: start, finish: finish, duration: duration});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // build HTML table elements out of data set\r\n        const tableData = this.dataSet.map((data, index) =>\r\n            <tr className=\"dataTableRow\" key={index}>\r\n                <td className=\"dataTableCell\">{data.label}</td>\r\n                <td className=\"dataTableCell\">{data.start}</td>\r\n                <td className=\"dataTableCell\">{data.finish}</td>\r\n                <td className=\"dataTableCell\">{data.duration}</td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Window-Content dataTableContainer\">\r\n                <table className=\"dataTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"dataTableCell\">Label</th>\r\n                            <th className=\"dataTableCell\">Start</th>\r\n                            <th className=\"dataTableCell\">Finish</th>\r\n                            <th className=\"dataTableCell\">Duration</th>\r\n                        </tr>\r\n                        {tableData}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Splitwatch;","import React, { Component } from 'react';\r\n\r\nimport Utility from './Utility';\r\n\r\nclass GenericSet extends Component {\r\n    static windowData = {\r\n        title: '💽 Generic Set',\r\n        type: 'react-component',\r\n        component: 'generic-set',\r\n        tooltip: 'generic data set'\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          results: {}\r\n        }\r\n\r\n        this.variableName = props.variableName || \"NAME\";\r\n        this.variableType = props.variableType || \"TYPE\";\r\n        this.dataSet = props.dataSet || [];\r\n\r\n        /*for (let i = 0; i < 30; i++)\r\n        {\r\n            this.dataSet.push({time: i, data: Utility.randomScalingFactor()});\r\n        }*/\r\n    }\r\n\r\n    prettyPrintValue(value)\r\n    {\r\n        return Object.keys(value).map((name, index) =>\r\n            <p key={index}>{name} = {value[name]}</p>\r\n        );\r\n    }\r\n\r\n    render()\r\n    {\r\n        // build HTML table elements out of data set\r\n        const tableData = this.dataSet.map((data, index) =>\r\n            <tr className=\"dataTableRow\" key={index}>\r\n                <td className=\"dataTableCell\">{data.Time.toFixed(1)}</td>\r\n                <td className=\"dataTableCell\">{this.prettyPrintValue(data.Value)}</td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Window-Content\">\r\n                <table className=\"dataTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"dataTableCell\">Time</th>\r\n                            <th className=\"dataTableCell\">Value</th>\r\n                        </tr>\r\n                        {tableData}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GenericSet;","import Splitwatch from \"./Splitwatch\";\r\nimport GenericSet from \"./GenericSet\";\r\n\r\n// Constructs the layout from the input files\r\nclass LayoutFactory {\r\n    constructor(files) \r\n    {\r\n        this.files = files;\r\n        this.contents = [];\r\n\r\n        this.config = undefined;\r\n        this.projectData = undefined;\r\n\r\n        this.onLayoutBuilt = function() {};\r\n\r\n        this.windowCount = -1;\r\n    }\r\n\r\n    build()\r\n    {\r\n        for (let i = 0; i < this.files.length; i++)\r\n        {\r\n            if (this.files[i]) this.parseFile(this.files[i]);\r\n        }\r\n    }\r\n\r\n    constructSet(record)\r\n    {\r\n        let memberCount = Object.keys(record.Data[0].Value).length;\r\n        let windowContents = {};\r\n\r\n        if (memberCount == 0)           // numeric set\r\n        \r\n           return {\r\n               title: '📈 Numeric Set ' + record.VariableName,\r\n               type: 'react-component',\r\n               component: 'numeric-set',\r\n               tooltip: 'numeric data set',\r\n               props: {\r\n                   variableName: record.VariableName,\r\n                   variableType: record.VariableType,\r\n                   dataSet: record.Data\r\n               }\r\n           }\r\n        \r\n        else if (memberCount > 0)        // generic set\r\n        {\r\n           return {\r\n               title: '💽 Generic Set ' + record.VariableName,\r\n               type: 'react-component',\r\n               component: 'generic-set',\r\n               tooltip: 'generic data set',\r\n               props: {\r\n                   variableName: record.VariableName,\r\n                   variableType: record.VariableType,\r\n                   dataSet: record.Data\r\n               }\r\n           }\r\n        }\r\n    }\r\n\r\n    constructTimestamp(record)\r\n    {\r\n        return {\r\n            title: '⌛ Timestamp',\r\n            type: 'react-component',\r\n            component: 'timestamp',\r\n            tooltip: 'timestamped events',\r\n            props: {\r\n                variableName: record.VariableName,\r\n                dataSet: record.Data\r\n            }\r\n        } \r\n    }\r\n\r\n    constructStopwatch(record)\r\n    {\r\n        return {\r\n            title: '⏱ Stopwatch',\r\n            type: 'react-component',\r\n            component: 'stopwatch',\r\n            tooltip: 'repeated event durations',\r\n            props: {\r\n                variableName: record.VariableName,\r\n                dataSet: record.Data\r\n            }\r\n        } \r\n    }\r\n\r\n    constructSplitwatch(record)\r\n    {\r\n        return {\r\n            title: '⏲ Splitwatch',\r\n            type: 'react-component',\r\n            component: 'splitwatch',\r\n            tooltip: 'sequential event durations',\r\n            props: {\r\n                variableName: record.VariableName,\r\n                dataSet: record.Data\r\n            }\r\n        } \r\n    }\r\n\r\n    // where the magic will eventually happen\r\n    assignContents(evt)\r\n    {\r\n        //console.log(evt.target.result);\r\n\r\n        // process file contents into window components\r\n        let input = JSON.parse(evt.target.result);\r\n        this.windowCount = input.Records.length;\r\n\r\n        this.projectData = input.ProjectData;\r\n\r\n        for (let i = 0; i < input.Records.length; i++)\r\n        {\r\n            let record = input.Records[i];\r\n            if (record.Data.length === 0) continue;\r\n\r\n            //let windowContents = {};\r\n\r\n            //let memberCount = Object.keys(record.Data[0].Value).length;\r\n            \r\n            let windowContent;\r\n\r\n            switch (record.DisplayType)\r\n            {\r\n                case \"set\": \r\n                    windowContent = this.constructSet(record); \r\n                    this.contents.push(windowContent);\r\n                    break;\r\n                case \"splitwatch\": \r\n                    windowContent = this.constructSplitwatch(record); \r\n                    this.contents.push(windowContent);\r\n                    break;\r\n                case \"stopwatch\": \r\n                    windowContent = this.constructStopwatch(record); \r\n                    this.contents.push(windowContent);\r\n                    break;\r\n                case \"timestamp\": \r\n                    windowContent = this.constructTimestamp(record);\r\n                    this.contents.push(windowContent);\r\n                    break;\r\n                default: console.log(\"invalid display type\");\r\n            }\r\n            \r\n            //console.log(\"Constructed window contents\");\r\n            //console.log(windowContents);\r\n        }\r\n\r\n        if (this.contents.length === this.windowCount)\r\n        {\r\n            this.config = {\r\n                dimensions: {\r\n                    borderWidth: 1,\r\n                    minItemHeight: 10,\r\n                    minItemWidth: 10,\r\n                    headerHeight: 20,\r\n                    dragProxyWidth: 300,\r\n                    dragProxyHeight: 200\r\n                },\r\n                labels: {\r\n                    close: 'close',\r\n                    maximise: 'maximise',\r\n                    minimise: 'minimise',\r\n                    popout: 'open in new window'\r\n                },\r\n                content: [{\r\n                    type: 'row',\r\n                    content: this.contents\r\n                }]\r\n            };\r\n            this.onLayoutBuilt();\r\n        }\r\n    }\r\n\r\n    parseFile(file)\r\n    {\r\n        var reader = new FileReader();\r\n\r\n        // assign on load callback using => function so the 'this' instance persists into the callback scope \r\n        reader.onload = (evt) => { this.assignContents(evt); }\r\n\r\n        reader.onerror = function (evt) {\r\n            console.log(\"error reading file\");\r\n        }\r\n        \r\n        reader.readAsText(file, \"UTF-8\");\r\n    }\r\n}\r\n\r\nexport default LayoutFactory;","import React, { Component } from 'react';\r\n\r\nclass Statistics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: {}\r\n        }\r\n\r\n        this.dataset = props.dataset;\r\n    }\r\n\r\n    render() {\r\n        var stats = this.generateStatistics(this.dataset);\r\n\r\n        return (\r\n            <div className=\"statisticsContainer\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    average: {stats.average.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    median: {stats.median.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    max: {stats.max.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    min: {stats.min.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    stddev: {stats.stddev.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateStatistics(dataset)\r\n    {\r\n        if (dataset.length === 0) return 0;\r\n\r\n        // get sum & min/max\r\n        let sum = 0;\r\n        let min = Infinity;\r\n        let max = Number.NEGATIVE_INFINITY;\r\n        let range = max - min;\r\n\r\n        // get average\r\n        for (let i = 0; i < dataset.length; i++){\r\n            sum += dataset[i];\r\n            if (dataset[i] < min) min = dataset[i];\r\n            if (dataset[i] > max) max = dataset[i];\r\n        }\r\n        let average = (sum / dataset.length);\r\n\r\n        // get standard deviation\r\n        let stdvalues = [];\r\n        for (let i = 0; i < dataset.length; i++) {\r\n            let val = dataset[i] - average;\r\n            stdvalues.push(val * val);\r\n        }\r\n\r\n        let stdsum = 0;\r\n        for (let i = 0; i < stdvalues.length; i++){\r\n            stdsum += stdvalues[i];\r\n        }\r\n        let stddev = Math.sqrt(stdsum / stdvalues.length);\r\n\r\n        // get median\r\n        let half = Math.floor(dataset.length / 2);\r\n        let median = 0;\r\n        if (dataset.length % 2) median = dataset[half];\r\n        else median = (dataset[half - 1] + dataset[half]) / 2.0;\r\n\r\n\r\n        return {average: average, median: median, max: max, min: min, range: range, stddev: stddev};\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\n\r\nimport Chart from 'chart.js';\r\n\r\nimport Utility from './Utility';\r\nimport AbacusMath from './AbacusMath';\r\n\r\nimport Statistics from './Statistics';\r\n\r\nclass NumericSet extends Component {\r\n    static windowData = {\r\n        title: '📈 Numeric Set',\r\n        type: 'react-component',\r\n        component: 'numeric-set',\r\n        tooltip: 'numeric data set'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: {}\r\n        }\r\n\r\n        this.variableName = props.variableName || \"NAME\";\r\n        this.variableType = props.variableType || \"TYPE\";\r\n        this.dataSet = props.dataSet || [];\r\n\r\n        this.xAxisLabel = props.xAxisLabel || \"Time (s)\";\r\n        this.yAxisLabel = props.yAxisLabel || \"Value\";\r\n\r\n        this.labels = [];\r\n        this.chartSet = [];\r\n\r\n        //this.props.glContainer.setTitle(`📈 Numeric Set ${Utility.randomDemoWord()}`);\r\n\r\n        this.canvasID = \"chart\" + Utility.generateUUID();\r\n\r\n        for (let i = 0; i < this.dataSet.length; i++)\r\n        {\r\n            let data = this.dataSet[i];\r\n            this.labels.push(data.Time.toFixed(1));\r\n            this.chartSet.push(data.Value);\r\n            //this.dataSetB.push(Utility.randomScalingFactor());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Window-Content\">\r\n                <div className=\"chart-container\">\r\n                    <canvas id={this.canvasID} aria-label=\"Numeric Set Line Chart\" role=\"img\" />\r\n                </div>\r\n                <br />\r\n                <Statistics dataset={this.chartSet} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    drawChart() {\r\n        var ctx = document.getElementById(this.canvasID).getContext('2d');\r\n        var myChart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: this.labels,\r\n                datasets: [{\r\n                    label: this.variableName,\r\n                    backgroundColor: Utility.randomChartColor(),\r\n                    borderColor: Utility.randomChartColor(),\r\n                    data: this.chartSet,\r\n                    fill: false,\r\n                }]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                title: {\r\n                    display: true,\r\n                    text: this.variableName\r\n                },\r\n                tooltips: {\r\n                    mode: 'index',\r\n                    intersect: false,\r\n                },\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: true,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: this.xAxisLabel\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: true,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: this.yAxisLabel\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawChart();\r\n    }\r\n}\r\n\r\nexport default NumericSet;","import React, { Component } from 'react';\r\nimport Utility from './Utility';\r\n\r\nclass Timestamp extends Component {\r\n    static windowData = {\r\n        title: '⌛ Timestamp',\r\n        type: 'react-component',\r\n        component: 'timestamp',\r\n        tooltip: 'timestamped events'\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          results: {}\r\n        }\r\n        \r\n        //this.variableName = props.variableName || \"VARIABLE NAME\";\r\n        this.dataSet = [];\r\n\r\n        //this.props.glContainer.setTitle(\"⌛ Timestamp\");\r\n\r\n        for (let i = 0; i < props.dataSet.length; i++)\r\n        {\r\n            this.dataSet.push({time: props.dataSet[i].Time.toFixed(2), data: props.dataSet[i].Name});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // build HTML table elements out of data set\r\n        const tableData = this.dataSet.map((data, index) =>\r\n            <tr className=\"dataTableRow\" key={index}>\r\n                <td className=\"dataTableCell\">{data.time}</td>\r\n                <td className=\"dataTableCell\">{data.data}</td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Window-Content\">\r\n                <table className=\"dataTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"dataTableCell\">Time</th>\r\n                            <th className=\"dataTableCell\">Value</th>\r\n                        </tr>\r\n                        {tableData}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timestamp;","import React, { Component } from 'react';\r\n\r\nclass Stopwatch extends Component {\r\n    static windowData = {\r\n        title: '⏱ Stopwatch',\r\n        type: 'react-component',\r\n        component: 'stopwatch',\r\n        tooltip: 'repeated event durations'\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          results: {}\r\n        }\r\n\r\n        this.name = props.variableName || \"VARIABLE NAME\";\r\n        this.dataSet = [];\r\n\r\n        for (let i = 0; i < props.dataSet.length; i++)\r\n        {\r\n            let start = props.dataSet[i].StartTime.toFixed(2);\r\n            let finish = props.dataSet[i].EndTime === -1 ? '-' : props.dataSet[i].EndTime.toFixed(2);\r\n            let duration = props.dataSet[i].Duration.toFixed(2);\r\n            this.dataSet.push({start: start, finish: finish, duration: duration});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // build HTML table elements out of data set\r\n        const tableData = this.dataSet.map((data, index) =>\r\n            <tr className=\"dataTableRow\" key={index}>\r\n                <td className=\"dataTableCell\">{data.start}</td>\r\n                <td className=\"dataTableCell\">{data.finish}</td>\r\n                <td className=\"dataTableCell\">{data.duration}</td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Window-Content\">\r\n                <table className=\"dataTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"dataTableCell\">Start</th>\r\n                            <th className=\"dataTableCell\">Finish</th>\r\n                            <th className=\"dataTableCell\">Duration</th>\r\n                        </tr>\r\n                        {tableData}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stopwatch;","import React, { Component } from 'react';\r\n\r\n// Dependencies\r\nimport GoldenLayout from 'golden-layout';\r\nimport LayoutFactory from './LayoutFactory';\r\n\r\n// Layout Components\r\nimport GenericSet from './GenericSet';\r\nimport NumericSet from './NumericSet';\r\nimport Timestamp from './Timestamp';\r\nimport Stopwatch from './Stopwatch';\r\nimport Splitwatch from './Splitwatch';\r\n\r\n// Displays the GoldenLayout layout for the project\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: {}\r\n        }\r\n\r\n        this.files = props.files;\r\n        this.hasRendered = false;\r\n        //this.callback = function(args) { props.parentCallback(args) };\r\n    }\r\n\r\n    // since goldenlayout works outside of the react pipeline we need to give it just a sec\r\n    // to make sure it can initalize before react tries to draw it\r\n    drawLayout() {\r\n        //setTimeout(() => {\r\n            let factory = new LayoutFactory(this.files);\r\n            let element = document.getElementById(\"layoutContainer\");\r\n            factory.onLayoutBuilt = e => {\r\n                const layout = new GoldenLayout(factory.config, element);\r\n                /*const layout = new GoldenLayout({\r\n                    content: [{\r\n                        type: 'row',\r\n                        content: [\r\n                            NumericSet.windowData,\r\n                            GenericSet.windowData,\r\n                            Timestamp.windowData,\r\n                            Splitwatch.windowData,\r\n                            Stopwatch.windowData\r\n                        ]\r\n                    }]\r\n                });*/\r\n                layout.registerComponent('numeric-set', NumericSet);\r\n                layout.registerComponent('generic-set', GenericSet);\r\n                layout.registerComponent('timestamp', Timestamp);\r\n                layout.registerComponent('stopwatch', Stopwatch);\r\n                layout.registerComponent('splitwatch', Splitwatch);\r\n\r\n                layout.on( 'tabCreated', function( tab ){\r\n                    tab.element.attr('title', tab.contentItem.config.tooltip);\r\n                });\r\n\r\n                //layout._isFullPage = true;\r\n                layout.init();\r\n                this.props.parentCallback(factory.projectData);\r\n                //this.callback(factory.projectData);\r\n            }\r\n            \r\n            factory.build();\r\n            this.hasRendered = true;\r\n        //}, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState)\r\n    {\r\n        return !this.hasRendered;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawLayout();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawLayout();\r\n    }\r\n\r\n    // Return an empty element, the rendering for the layout isnt react based\r\n    // so we'll just make it draw when react wants stuff rendered\r\n    render() {\r\n        var h = window.innerHeight;\r\n        var ht = 90; // magic! :(\r\n        var hc = h - ht;\r\n        \r\n\r\n        return (<div id=\"layoutContainer\" style={{height: hc}} />);\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\n\r\nclass ProjectData extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        results: {}\r\n      }\r\n\r\n      this.unityVersion = \"2019.3\";\r\n      this.duration = \"12:00am - 12:10am, 1/1/2020\"\r\n    }\r\n  \r\n    render() {\r\n      let data = this.props.data;\r\n      let isEmpty = Object.keys(data).length === 0 && data.constructor === Object;\r\n\r\n      if (isEmpty)\r\n      {\r\n        return <div className=\"Project-Data\" />\r\n      }\r\n      else\r\n      {\r\n        return (\r\n          <div className=\"Project-Data\">\r\n              <p>{data.Name} v.{data.Version}</p>\r\n              <p>{data.Platform}, unity {data.UnityVersion}</p>\r\n              <p>by {data.Author}</p>\r\n              <p>dataset from {data.StartTime} - {data.EndTime}, {data.Date} ({data.Duration})</p>\r\n          </div>\r\n        );\r\n      }\r\n      \r\n    }\r\n}\r\n\r\n  \r\nexport default ProjectData;","/* DEPRECATED (but probably reusable) */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass FileDialogue extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: {}\r\n    }\r\n\r\n    this.buttonLabel = props.buttonLabel;\r\n  }\r\n\r\n  buildFileSelector() {\r\n    const fileSelector = document.createElement('input');\r\n    fileSelector.setAttribute('type', 'file');\r\n    fileSelector.setAttribute('multiple', 'multiple');\r\n    return fileSelector;\r\n  }\r\n\r\n  handleFileSelect(evt) {\r\n    console.log(\"handling file\");\r\n\r\n    var file = evt.target.files[0]; // FileList object\r\n    if (file) {\r\n      if (file.type !== \".json\" || file.type !== \".abc\") {\r\n        console.log(\"Invalid file type\");\r\n      }\r\n      var reader = new FileReader();\r\n      reader.readAsText(file, \"UTF-8\");\r\n      reader.onload = function (evt) {\r\n        console.log(evt.target.result);\r\n      }\r\n      reader.onerror = function (evt) {\r\n        console.log(\"error reading file\");\r\n      }\r\n\r\n      document.getElementById('splashScreen').style.display = \"none\";\r\n      //window.fileLoaded = true;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fileSelector = this.buildFileSelector();\r\n    this.fileSelector.addEventListener('change', this.handleFileSelect, false);\r\n  }\r\n\r\n  handleButtonClick = (e) => {\r\n    e.preventDefault();\r\n    this.fileSelector.click();\r\n  }\r\n\r\n  render() {\r\n    return <button onClick={this.handleButtonClick}>{this.buttonLabel}</button>\r\n  }\r\n}\r\n\r\nexport default FileDialogue;","import React, { Component } from 'react';\r\n\r\nimport ProjectData from './ProjectData';\r\nimport FileDialogue from './FileDialogue';\r\n\r\nclass Toolbar extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        results: {}\r\n      }\r\n\r\n      this.hasFiles = props.hasFiles;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"ToolbarContainer\">\r\n            <div className=\"ToolbarInner\">\r\n                <h1>📋abacus board</h1>\r\n            </div>\r\n            <div className=\"ToolbarInner\" style={{marginLeft: \"25px\"}}>\r\n                <ProjectData data={this.props.projectData} />\r\n            </div>\r\n            { this.hasFiles &&\r\n              <div className=\"ToolbarInner\">\r\n                <FileDialogue buttonLabel='Regenerate' />\r\n              </div>\r\n            }\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Toolbar;","import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n\r\n// File loading drag'n'drop interface\r\nclass FileDropzone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDrop = (files) => {\r\n            this.setState({ files });\r\n            this.sendData();\r\n        };\r\n        this.state = {\r\n            files: []\r\n        };\r\n    }\r\n\r\n    sendData() {\r\n        this.props.parentCallback(this.state.files);\r\n    }\r\n\r\n    render() {\r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name} - {file.size} bytes\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <Dropzone onDrop={this.onDrop}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <section className=\"dropzoneContainer\">\r\n                        <div {...getRootProps({ className: 'dropzone' })}>\r\n                            <input {...getInputProps()} />\r\n                            <p>drag 'n' drop or click to select file(s)</p>\r\n                        </div>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileDropzone;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\n// Top-Level Components\nimport Layout from './Layout';\nimport Toolbar from './Toolbar';\nimport FileDropzone from './FileDropzone';\n\n//const ThemeContext = React.createContext('light');\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: {}\n    }\n    this.state = {\n      isInitialized: false,\n      hasParsed: false,\n      files: [],\n      projectData: {}\n    };\n  }\n\n  onFilesLoaded = (acceptedFiles) => {\n    this.setState((state) => {\n      return { isInitialized: true, hasParsed: this.state.hasParsed, files: acceptedFiles, projectData: this.state.projectData}\n    });\n  }\n\n  onFilesParsed = (data) => {\n    this.setState((state) => {\n      return { \n        isInitialized: this.state.isInitialized, \n        hasParsed: true,\n        files: this.state.files,\n        projectData: data\n      }\n    });\n  }\n\n  // render the toolbar and swap between layout and file dropzone depending on if files have been read\n  render() {\n    return (\n      <div>\n        <Toolbar id=\"toolbar\" hasFiles={this.state.isInitialized} projectData={this.state.projectData} />\n        { this.state.isInitialized\n          ? <Layout parentCallback={this.onFilesParsed}  files={this.state.files} />\n          : <FileDropzone parentCallback={this.onFilesLoaded} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nimport 'golden-layout/src/css/goldenlayout-base.css'\nimport 'golden-layout/src/css/goldenlayout-dark-theme.css'\n\nReactDOM.render(\n  <App />,                          // Render our App component\n  document.getElementById('root'),  // using the HTML doc's element with the id 'root'\n  function()                        // and execute this afterwards\n  {\n    console.log(\"React DOM rendered (callback)\");\n  }\n);\n\nwindow.React = React;\nwindow.ReactDOM = ReactDOM;\n\n//registerServiceWorker();\n\n/* ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); */\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}