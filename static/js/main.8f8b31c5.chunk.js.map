{"version":3,"sources":["Utility.js","Splitwatch.js","GenericSet.js","LayoutFactory.js","Statistics.js","NumericSet.js","Timestamp.js","Stopwatch.js","Layout.js","ProjectData.js","Toolbar.js","FileDropzone.js","App.js","index.js"],"names":["Utility","replace","c","r","Math","random","toString","names","floor","length","colors","Splitwatch","props","state","results","dataSet","i","label","Name","start","StartTime","toFixed","finish","EndTime","duration","Duration","push","tableData","this","map","data","index","className","key","Component","windowData","title","type","component","tooltip","GenericSet","variableName","variableType","value","Object","keys","name","Time","prettyPrintValue","Value","LayoutFactory","files","contents","config","undefined","projectData","onLayoutBuilt","windowCount","parseFile","json","assignContents","record","memberCount","Data","VariableName","VariableType","input","JSON","parse","Records","ProjectData","windowContent","DisplayType","constructSet","constructSplitwatch","constructStopwatch","constructTimestamp","console","log","settings","showPopoutIcon","dimensions","borderWidth","minItemHeight","minItemWidth","headerHeight","dragProxyWidth","dragProxyHeight","labels","close","maximise","minimise","popout","content","file","reader","FileReader","onload","evt","target","result","onerror","readAsText","Statistics","dataset","stats","generateStatistics","average","median","max","min","stddev","sum","Infinity","Number","NEGATIVE_INFINITY","range","stdvalues","val","stdsum","sqrt","half","NumericSet","xAxisLabel","yAxisLabel","chartSet","canvasID","generateUUID","id","aria-label","role","ctx","document","getElementById","getContext","Chart","datasets","backgroundColor","randomChartColor","borderColor","fill","options","responsive","display","text","tooltips","mode","intersect","hover","scales","xAxes","scaleLabel","labelString","yAxes","drawChart","Timestamp","time","Stopwatch","Layout","hasRendered","buildDemo","setTimeout","factory","element","e","layout","GoldenLayout","registerComponent","on","tab","attr","contentItem","init","parentCallback","build","buildDirect","nextProps","nextState","drawLayout","hc","window","innerHeight","style","height","constructor","Version","Platform","UnityVersion","Author","Date","Toolbar","hasFiles","marginLeft","FileDropzone","onDrop","setState","sendData","size","getRootProps","getInputProps","App","onFilesLoaded","acceptedFiles","isInitialized","hasParsed","onFilesParsed","startDemo","href","onClick","ReactDOM","render","React"],"mappings":"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","file":"static/js/main.8f8b31c5.chunk.js","sourcesContent":["class Utility {\r\n    static generateUUID()\r\n    {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    static randomDemoWord()\r\n    {\r\n        var names = [\r\n            'computrons',\r\n            'flops',\r\n            'positions',\r\n            'segments',\r\n            'miners',\r\n            'blocks',\r\n            'peripherals',\r\n            'relations',\r\n            'networks'\r\n        ]\r\n\r\n        return names[Math.floor(Math.random() * names.length)];\r\n    }\r\n\r\n    static randomScalingFactor() {\r\n        return Math.floor(Math.random() * (100 + 100)) + 100;\r\n    }\r\n\r\n    static randomChartColor()\r\n    {\r\n        var colors = [\r\n            'rgb(255, 99, 132)',    // red\r\n            'rgb(245, 130, 155)',   // pink\r\n            'rgb(255, 159, 64)',    // orange\r\n            'rgb(255, 127, 80)',    // coral\r\n            'rgb(255, 205, 86)',    // yellow\r\n            'rgb(70, 227, 149)',    // green\r\n            'rgb(112, 235, 96)',    // lime\r\n            'rgb(54, 162, 235)',    // blue\r\n            'rgb(153, 102, 255)',   // purple\r\n            'rgb(218, 98, 240)'     // magenta\r\n        ]\r\n\r\n        return colors[Math.floor(Math.random() * colors.length)];\r\n    }\r\n}\r\n\r\nexport default Utility;","import React, { Component } from 'react';\r\nimport Utility from './Utility';\r\n\r\nclass Splitwatch extends Component {\r\n    static windowData = {\r\n        title: '⏲ Splitwatch',\r\n        type: 'react-component',\r\n        component: 'splitwatch',\r\n        tooltip: 'sequential event durations'\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          results: {}\r\n        }\r\n\r\n        //this.variableName = props.variableName || \"VARIABLE NAME\";\r\n        this.dataSet = [];\r\n\r\n        for (let i = 0; i < props.dataSet.length; i++)\r\n        {\r\n            let label = props.dataSet[i].Name;\r\n            let start = props.dataSet[i].StartTime.toFixed(2);\r\n            let finish = props.dataSet[i].EndTime === -1 ? '-' : props.dataSet[i].EndTime.toFixed(2);\r\n            let duration = props.dataSet[i].Duration.toFixed(2);\r\n            this.dataSet.push({label: label, start: start, finish: finish, duration: duration});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // build HTML table elements out of data set\r\n        const tableData = this.dataSet.map((data, index) =>\r\n            <tr className=\"dataTableRow\" key={index}>\r\n                <td className=\"dataTableCell\">{data.label}</td>\r\n                <td className=\"dataTableCell\">{data.start}</td>\r\n                <td className=\"dataTableCell\">{data.finish}</td>\r\n                <td className=\"dataTableCell\">{data.duration}</td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Window-Content dataTableContainer\">\r\n                <table className=\"dataTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"dataTableCell\">Label</th>\r\n                            <th className=\"dataTableCell\">Start</th>\r\n                            <th className=\"dataTableCell\">Finish</th>\r\n                            <th className=\"dataTableCell\">Duration</th>\r\n                        </tr>\r\n                        {tableData}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Splitwatch;","import React, { Component } from 'react';\r\n\r\nimport Utility from './Utility';\r\n\r\nclass GenericSet extends Component {\r\n    static windowData = {\r\n        title: '💽 Generic Set',\r\n        type: 'react-component',\r\n        component: 'generic-set',\r\n        tooltip: 'generic data set'\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          results: {}\r\n        }\r\n\r\n        this.variableName = props.variableName || \"NAME\";\r\n        this.variableType = props.variableType || \"TYPE\";\r\n        this.dataSet = props.dataSet || [];\r\n\r\n        /*for (let i = 0; i < 30; i++)\r\n        {\r\n            this.dataSet.push({time: i, data: Utility.randomScalingFactor()});\r\n        }*/\r\n    }\r\n\r\n    prettyPrintValue(value)\r\n    {\r\n        return Object.keys(value).map((name, index) =>\r\n            <p key={index}>{name} = {value[name]}</p>\r\n        );\r\n    }\r\n\r\n    render()\r\n    {\r\n        // build HTML table elements out of data set\r\n        const tableData = this.dataSet.map((data, index) =>\r\n            <tr className=\"dataTableRow\" key={index}>\r\n                <td className=\"dataTableCell\">{data.Time.toFixed(1)}</td>\r\n                <td className=\"dataTableCell\">{this.prettyPrintValue(data.Value)}</td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Window-Content\">\r\n                <table className=\"dataTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"dataTableCell\">Time</th>\r\n                            <th className=\"dataTableCell\">Value</th>\r\n                        </tr>\r\n                        {tableData}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GenericSet;","import Splitwatch from \"./Splitwatch\";\r\nimport GenericSet from \"./GenericSet\";\r\n\r\n// Constructs the layout from the input files\r\nclass LayoutFactory {\r\n    constructor(files) \r\n    {\r\n        this.files = files;\r\n        this.contents = [];\r\n\r\n        this.config = undefined;\r\n        this.projectData = undefined;\r\n\r\n        this.onLayoutBuilt = function() {};\r\n\r\n        this.windowCount = -1;\r\n    }\r\n\r\n    build()\r\n    {\r\n        for (let i = 0; i < this.files.length; i++)\r\n        {\r\n            if (this.files[i]) this.parseFile(this.files[i]);\r\n        }\r\n    }\r\n\r\n    buildDirect(json)\r\n    {\r\n        this.assignContents(json);\r\n    }\r\n\r\n    constructSet(record)\r\n    {\r\n        let memberCount = Object.keys(record.Data[0].Value).length;\r\n        let windowContents = {};\r\n\r\n        if (memberCount == 0)           // numeric set\r\n        \r\n           return {\r\n               title: '📈 Numeric Set ' + record.VariableName,\r\n               type: 'react-component',\r\n               component: 'numeric-set',\r\n               tooltip: 'numeric data set',\r\n               props: {\r\n                   variableName: record.VariableName,\r\n                   variableType: record.VariableType,\r\n                   dataSet: record.Data\r\n               }\r\n           }\r\n        \r\n        else if (memberCount > 0)        // generic set\r\n        {\r\n           return {\r\n               title: '💽 Generic Set ' + record.VariableName,\r\n               type: 'react-component',\r\n               component: 'generic-set',\r\n               tooltip: 'generic data set',\r\n               props: {\r\n                   variableName: record.VariableName,\r\n                   variableType: record.VariableType,\r\n                   dataSet: record.Data\r\n               }\r\n           }\r\n        }\r\n    }\r\n\r\n    constructTimestamp(record)\r\n    {\r\n        return {\r\n            title: '⌛ Timestamp',\r\n            type: 'react-component',\r\n            component: 'timestamp',\r\n            tooltip: 'timestamped events',\r\n            props: {\r\n                variableName: record.VariableName,\r\n                dataSet: record.Data\r\n            }\r\n        } \r\n    }\r\n\r\n    constructStopwatch(record)\r\n    {\r\n        return {\r\n            title: '⏱ Stopwatch',\r\n            type: 'react-component',\r\n            component: 'stopwatch',\r\n            tooltip: 'repeated event durations',\r\n            props: {\r\n                variableName: record.VariableName,\r\n                dataSet: record.Data\r\n            }\r\n        } \r\n    }\r\n\r\n    constructSplitwatch(record)\r\n    {\r\n        return {\r\n            title: '⏲ Splitwatch',\r\n            type: 'react-component',\r\n            component: 'splitwatch',\r\n            tooltip: 'sequential event durations',\r\n            props: {\r\n                variableName: record.VariableName,\r\n                dataSet: record.Data\r\n            }\r\n        } \r\n    }\r\n\r\n    // where the magic happens\r\n    assignContents(json)\r\n    {\r\n        //console.log(evt.target.result);\r\n\r\n        // process file contents into window components\r\n        let input = JSON.parse(json);\r\n        this.windowCount = input.Records.length;\r\n\r\n        this.projectData = input.ProjectData;\r\n        //console.log(this.projectData);\r\n\r\n        for (let i = 0; i < input.Records.length; i++)\r\n        {\r\n            let record = input.Records[i];\r\n            if (record.Data.length === 0) \r\n\t\t\t{\r\n\t\t\t\tthis.windowCount--;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n            //let windowContents = {};\r\n\r\n            //let memberCount = Object.keys(record.Data[0].Value).length;\r\n            \r\n            let windowContent;\r\n\r\n            switch (record.DisplayType)\r\n            {\r\n                case \"set\": \r\n                    windowContent = this.constructSet(record); \r\n                    this.contents.push(windowContent);\r\n                    break;\r\n                case \"splitwatch\": \r\n                    windowContent = this.constructSplitwatch(record); \r\n                    this.contents.push(windowContent);\r\n                    break;\r\n                case \"stopwatch\": \r\n                    windowContent = this.constructStopwatch(record); \r\n                    this.contents.push(windowContent);\r\n                    break;\r\n                case \"timestamp\": \r\n                    windowContent = this.constructTimestamp(record);\r\n                    this.contents.push(windowContent);\r\n                    break;\r\n                default: console.log(\"invalid display type\");\r\n            }\r\n            \r\n            //console.log(\"Constructed window contents\");\r\n            //console.log(windowContents);\r\n        }\r\n\r\n        if (this.contents.length === this.windowCount)\r\n        {\r\n            this.config = {\r\n\t\t\t\tsettings:{\r\n\t\t\t\t\tshowPopoutIcon: false\r\n\t\t\t\t},\r\n                dimensions: {\r\n                    borderWidth: 1,\r\n                    minItemHeight: 10,\r\n                    minItemWidth: 10,\r\n                    headerHeight: 20,\r\n                    dragProxyWidth: 300,\r\n                    dragProxyHeight: 200\r\n                },\r\n                labels: {\r\n                    close: 'close',\r\n                    maximise: 'maximise',\r\n                    minimise: 'minimise',\r\n                    popout: 'open in new window'\r\n                },\r\n                content: [{\r\n                    type: 'row',\r\n                    content: this.contents\r\n                }]\r\n            };\r\n            this.onLayoutBuilt();\r\n        }\r\n    }\r\n\r\n    parseFile(file)\r\n    {\r\n        var reader = new FileReader();\r\n\r\n        // assign on load callback using => function so the 'this' instance persists into the callback scope \r\n        reader.onload = (evt) => { this.assignContents(evt.target.result); }\r\n\r\n        reader.onerror = function (evt) {\r\n            console.log(\"error reading file\");\r\n        }\r\n        \r\n        reader.readAsText(file, \"UTF-8\");\r\n    }\r\n}\r\n\r\nexport default LayoutFactory;","import React, { Component } from 'react';\r\n\r\nclass Statistics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: {}\r\n        }\r\n\r\n        this.dataset = props.dataset;\r\n    }\r\n\r\n    render() {\r\n        var stats = this.generateStatistics(this.dataset);\r\n\r\n        return (\r\n            <div className=\"statisticsContainer\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    average: {stats.average.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    median: {stats.median.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    max: {stats.max.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    min: {stats.min.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className=\"statisticBox\">\r\n                                    stddev: {stats.stddev.toFixed(2)}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateStatistics(dataset)\r\n    {\r\n        if (dataset.length === 0) return 0;\r\n\r\n        // get sum & min/max\r\n        let sum = 0;\r\n        let min = Infinity;\r\n        let max = Number.NEGATIVE_INFINITY;\r\n\r\n        // get average\r\n        for (let i = 0; i < dataset.length; i++){\r\n            sum += dataset[i];\r\n            if (dataset[i] < min) min = dataset[i];\r\n            if (dataset[i] > max) max = dataset[i];\r\n        }\r\n        let average = (sum / dataset.length);\r\n        \r\n        let range = max - min;\r\n\r\n        // get standard deviation\r\n        let stdvalues = [];\r\n        for (let i = 0; i < dataset.length; i++) {\r\n            let val = dataset[i] - average;\r\n            stdvalues.push(val * val);\r\n        }\r\n\r\n        let stdsum = 0;\r\n        for (let i = 0; i < stdvalues.length; i++){\r\n            stdsum += stdvalues[i];\r\n        }\r\n        let stddev = Math.sqrt(stdsum / stdvalues.length);\r\n\r\n        // get median\r\n        let half = Math.floor(dataset.length / 2);\r\n        let median = 0;\r\n        if (dataset.length % 2) median = dataset[half];\r\n        else median = (dataset[half - 1] + dataset[half]) / 2.0;\r\n\r\n\r\n        return {average: average, median: median, max: max, min: min, range: range, stddev: stddev};\r\n    }\r\n}\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\r\n\r\nimport Chart from 'chart.js';\r\n\r\nimport Utility from './Utility';\r\n\r\nimport Statistics from './Statistics';\r\n\r\nclass NumericSet extends Component {\r\n    static windowData = {\r\n        title: '📈 Numeric Set',\r\n        type: 'react-component',\r\n        component: 'numeric-set',\r\n        tooltip: 'numeric data set'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: {}\r\n        }\r\n\r\n        this.variableName = props.variableName || \"NAME\";\r\n        this.variableType = props.variableType || \"TYPE\";\r\n        this.dataSet = props.dataSet || [];\r\n\r\n        this.xAxisLabel = props.xAxisLabel || \"Time (s)\";\r\n        this.yAxisLabel = props.yAxisLabel || \"Value\";\r\n\r\n        this.labels = [];\r\n        this.chartSet = [];\r\n\r\n        //this.props.glContainer.setTitle(`📈 Numeric Set ${Utility.randomDemoWord()}`);\r\n\r\n        this.canvasID = \"chart\" + Utility.generateUUID();\r\n\r\n        for (let i = 0; i < this.dataSet.length; i++)\r\n        {\r\n            let data = this.dataSet[i];\r\n            this.labels.push(data.Time.toFixed(1));\r\n            this.chartSet.push(data.Value);\r\n            //this.dataSetB.push(Utility.randomScalingFactor());\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Window-Content\">\r\n                <div className=\"chart-container\">\r\n                    <canvas id={this.canvasID} aria-label=\"Numeric Set Line Chart\" role=\"img\" />\r\n                </div>\r\n                <br />\r\n                <Statistics dataset={this.chartSet} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    drawChart() {\r\n        var ctx = document.getElementById(this.canvasID).getContext('2d');\r\n        var myChart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: this.labels,\r\n                datasets: [{\r\n                    label: this.variableName,\r\n                    backgroundColor: Utility.randomChartColor(),\r\n                    borderColor: Utility.randomChartColor(),\r\n                    data: this.chartSet,\r\n                    fill: false,\r\n                }]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                title: {\r\n                    display: true,\r\n                    text: this.variableName\r\n                },\r\n                tooltips: {\r\n                    mode: 'index',\r\n                    intersect: false,\r\n                },\r\n                hover: {\r\n                    mode: 'nearest',\r\n                    intersect: true\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: true,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: this.xAxisLabel\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: true,\r\n                        scaleLabel: {\r\n                            display: true,\r\n                            labelString: this.yAxisLabel\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawChart();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawChart();\r\n    }\r\n}\r\n\r\nexport default NumericSet;","import React, { Component } from 'react';\r\nimport Utility from './Utility';\r\n\r\nclass Timestamp extends Component {\r\n    static windowData = {\r\n        title: '⌛ Timestamp',\r\n        type: 'react-component',\r\n        component: 'timestamp',\r\n        tooltip: 'timestamped events'\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          results: {}\r\n        }\r\n        \r\n        //this.variableName = props.variableName || \"VARIABLE NAME\";\r\n        this.dataSet = [];\r\n\r\n        //this.props.glContainer.setTitle(\"⌛ Timestamp\");\r\n\r\n        for (let i = 0; i < props.dataSet.length; i++)\r\n        {\r\n            this.dataSet.push({time: props.dataSet[i].Time.toFixed(2), data: props.dataSet[i].Name});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // build HTML table elements out of data set\r\n        const tableData = this.dataSet.map((data, index) =>\r\n            <tr className=\"dataTableRow\" key={index}>\r\n                <td className=\"dataTableCell\">{data.time}</td>\r\n                <td className=\"dataTableCell\">{data.data}</td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Window-Content\">\r\n                <table className=\"dataTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"dataTableCell\">Time</th>\r\n                            <th className=\"dataTableCell\">Value</th>\r\n                        </tr>\r\n                        {tableData}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timestamp;","import React, { Component } from 'react';\r\n\r\nclass Stopwatch extends Component {\r\n    static windowData = {\r\n        title: '⏱ Stopwatch',\r\n        type: 'react-component',\r\n        component: 'stopwatch',\r\n        tooltip: 'repeated event durations'\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          results: {}\r\n        }\r\n\r\n        this.name = props.variableName || \"VARIABLE NAME\";\r\n        this.dataSet = [];\r\n\r\n        for (let i = 0; i < props.dataSet.length; i++)\r\n        {\r\n            let start = props.dataSet[i].StartTime.toFixed(2);\r\n            let finish = props.dataSet[i].EndTime === -1 ? '-' : props.dataSet[i].EndTime.toFixed(2);\r\n            let duration = props.dataSet[i].Duration.toFixed(2);\r\n            this.dataSet.push({start: start, finish: finish, duration: duration});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // build HTML table elements out of data set\r\n        const tableData = this.dataSet.map((data, index) =>\r\n            <tr className=\"dataTableRow\" key={index}>\r\n                <td className=\"dataTableCell\">{data.start}</td>\r\n                <td className=\"dataTableCell\">{data.finish}</td>\r\n                <td className=\"dataTableCell\">{data.duration}</td>\r\n            </tr>\r\n        );\r\n\r\n        return (\r\n            <div className=\"Window-Content\">\r\n                <table className=\"dataTable\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th className=\"dataTableCell\">Start</th>\r\n                            <th className=\"dataTableCell\">Finish</th>\r\n                            <th className=\"dataTableCell\">Duration</th>\r\n                        </tr>\r\n                        {tableData}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stopwatch;","import React, { Component } from 'react';\r\n\r\n// Dependencies\r\nimport GoldenLayout from 'golden-layout';\r\nimport LayoutFactory from './LayoutFactory';\r\n\r\n// Layout Components\r\nimport GenericSet from './GenericSet';\r\nimport NumericSet from './NumericSet';\r\nimport Timestamp from './Timestamp';\r\nimport Stopwatch from './Stopwatch';\r\nimport Splitwatch from './Splitwatch';\r\n\r\n// Displays the GoldenLayout layout for the project\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            results: {}\r\n        }\r\n\r\n        this.files = props.files;\r\n        this.hasRendered = false;\r\n        this.buildDemo = props.buildDemo;\r\n        console.log('build demo: ' + this.buildDemo);\r\n        //this.demoContent = props.demoContent;\r\n        //this.callback = function(args) { props.parentCallback(args) };\r\n    }\r\n\r\n    // since goldenlayout works outside of the react pipeline we need to give it just a sec\r\n    // to make sure it can initalize before react tries to draw it\r\n    drawLayout() {\r\n        setTimeout(() => {\r\n            let factory = new LayoutFactory(this.files);\r\n            let element = document.getElementById(\"layoutContainer\");\r\n            factory.onLayoutBuilt = e => {\r\n                const layout = new GoldenLayout(factory.config, element);\r\n                /*const layout = new GoldenLayout({\r\n                    content: [{\r\n                        type: 'row',\r\n                        content: [\r\n                            NumericSet.windowData,\r\n                            GenericSet.windowData,\r\n                            Timestamp.windowData,\r\n                            Splitwatch.windowData,\r\n                            Stopwatch.windowData\r\n                        ]\r\n                    }]\r\n                });*/\r\n                layout.registerComponent('numeric-set', NumericSet);\r\n                layout.registerComponent('generic-set', GenericSet);\r\n                layout.registerComponent('timestamp', Timestamp);\r\n                layout.registerComponent('stopwatch', Stopwatch);\r\n                layout.registerComponent('splitwatch', Splitwatch);\r\n\r\n                layout.on( 'tabCreated', function( tab ){\r\n                    tab.element.attr('title', tab.contentItem.config.tooltip);\r\n                });\r\n\r\n                //layout._isFullPage = true;\r\n                layout.init();\r\n                this.props.parentCallback(factory.projectData);\r\n                //this.callback(factory.projectData);\r\n            }\r\n            \r\n            if (this.props.buildDemo === false)\r\n            {\r\n                console.log(\"building\");\r\n                factory.build();\r\n            }\r\n            else {\r\n                console.log(\"building demo content\");\r\n                factory.buildDirect(`\r\n            {\r\n                \"ProjectData\": {\r\n                  \"Name\": \"JSON_Example\",\r\n                  \"Version\": \"0.1\",\r\n                  \"Platform\": \"WindowsEditor\",\r\n                  \"Author\": \"DefaultCompany\",\r\n                  \"UnityVersion\": \"2019.2.16f1\",\r\n                  \"StartTime\": \"6:00:19 PM\",\r\n                  \"EndTime\": \"6:00:29 PM\",\r\n                  \"Date\": \"4/11/2020\",\r\n                  \"Duration\": \"00:00:10.2195326\"\r\n                },\r\n                \"Records\": [\r\n                  {\r\n                    \"DisplayType\": \"set\",\r\n                    \"VariableName\": \"Noise\",\r\n                    \"VariableType\": \"System.Single\",\r\n                    \"Data\": [\r\n                      {\r\n                        \"Value\": 0.0,\r\n                        \"Time\": 0.0\r\n                      },\r\n                      {\r\n                        \"Value\": 0.465273559,\r\n                        \"Time\": 1.01499987\r\n                      },\r\n                      {\r\n                        \"Value\": 0.4652718,\r\n                        \"Time\": 2.02431583\r\n                      },\r\n                      {\r\n                        \"Value\": 0.4652898,\r\n                        \"Time\": 3.03658938\r\n                      },\r\n                      {\r\n                        \"Value\": 0.465305239,\r\n                        \"Time\": 4.049621\r\n                      },\r\n                      {\r\n                        \"Value\": 0.4652255,\r\n                        \"Time\": 5.064625\r\n                      },\r\n                      {\r\n                        \"Value\": 0.465273082,\r\n                        \"Time\": 6.078663\r\n                      },\r\n                      {\r\n                        \"Value\": 0.465247363,\r\n                        \"Time\": 7.08807564\r\n                      },\r\n                      {\r\n                        \"Value\": 0.465360463,\r\n                        \"Time\": 8.096925\r\n                      },\r\n                      {\r\n                        \"Value\": 0.460046858,\r\n                        \"Time\": 9.098421\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"DisplayType\": \"set\",\r\n                    \"VariableName\": \"position\",\r\n                    \"VariableType\": \"UnityEngine.Vector3\",\r\n                    \"Data\": [\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 0.0,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 0.0\r\n                      },\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 0.0,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 1.01499987\r\n                      },\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 0.0,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 2.02431583\r\n                      },\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 0.0,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 3.03658938\r\n                      },\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 0.0,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 4.049621\r\n                      },\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 0.0,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 5.064625\r\n                      },\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 0.0,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 6.078663\r\n                      },\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 0.0,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 7.08807564\r\n                      },\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 1.2,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 8.096925\r\n                      },\r\n                      {\r\n                        \"Value\": {\r\n                          \"x\": 1.2,\r\n                          \"y\": 0.0,\r\n                          \"z\": 0.0\r\n                        },\r\n                        \"Time\": 9.098421\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"DisplayType\": \"splitwatch\",\r\n                    \"VariableName\": \"Splitwatch\",\r\n                    \"VariableType\": \"System.Single\",\r\n                    \"Data\": [\r\n                      {\r\n                        \"Name\": \"Split\",\r\n                        \"StartTime\": 1.68864834,\r\n                        \"EndTime\": 4.049621,\r\n                        \"Duration\": 2.360973\r\n                      },\r\n                      {\r\n                        \"Name\": \"Split\",\r\n                        \"StartTime\": 4.72536135,\r\n                        \"EndTime\": -1.0,\r\n                        \"Duration\": 5.16479445\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"DisplayType\": \"stopwatch\",\r\n                    \"VariableName\": \"Stopwatch\",\r\n                    \"VariableType\": \"System.Single\",\r\n                    \"Data\": [\r\n                      {\r\n                        \"StartTime\": 1.68864834,\r\n                        \"EndTime\": 4.049621,\r\n                        \"Duration\": 2.360973\r\n                      },\r\n                      {\r\n                        \"StartTime\": 4.72536135,\r\n                        \"EndTime\": -1.0,\r\n                        \"Duration\": 5.16479445\r\n                      }\r\n                    ]\r\n                  },\r\n                  {\r\n                    \"DisplayType\": \"timestamp\",\r\n                    \"VariableName\": \"Event Timestamper\",\r\n                    \"VariableType\": \"System.Single\",\r\n                    \"Data\": [\r\n                      {\r\n                        \"Time\": 2.851527,\r\n                        \"Name\": \"someName\"\r\n                      },\r\n                      {\r\n                        \"Time\": 5.11529255,\r\n                        \"Name\": \"someName\"\r\n                      },\r\n                      {\r\n                        \"Time\": 5.55360746,\r\n                        \"Name\": \"someName\"\r\n                      }\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            `);\r\n            }\r\n            this.hasRendered = true;\r\n        }, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState)\r\n    {\r\n        return !this.hasRendered;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.files && this.files.length !== 0) this.drawLayout();\r\n    }\r\n\r\n    /* componentDidUpdate() {\r\n        if(this.files && this.files.length !== 0) this.drawLayout();\r\n    } */\r\n\r\n    // Return an empty element, the rendering for the layout isnt react based\r\n    // so we'll just make it draw when react wants stuff rendered\r\n    render() {\r\n        var h = window.innerHeight;\r\n        var ht = 90; // magic! :(\r\n        var hc = h - ht;\r\n        \r\n\r\n        return (<div id=\"layoutContainer\" style={{height: hc}} />);\r\n    }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\n\r\nclass ProjectData extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        results: {}\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      let data = this.props.data;\r\n      let isEmpty = !data || Object.keys(data).length === 0 && data.constructor === Object;\r\n\r\n      if (isEmpty)\r\n      {\r\n        return <div className=\"Project-Data\" />\r\n      }\r\n      else\r\n      {\r\n        return (\r\n          <div className=\"Project-Data\">\r\n              <p>{data.Name} v.{data.Version}</p>\r\n              <p>{data.Platform}, unity {data.UnityVersion}</p>\r\n              <p>by {data.Author}</p>\r\n              <p>dataset from {data.StartTime} - {data.EndTime}, {data.Date} ({data.Duration})</p>\r\n          </div>\r\n        );\r\n      }\r\n      \r\n    }\r\n}\r\n\r\n  \r\nexport default ProjectData;","import React, { Component } from 'react';\r\n\r\nimport ProjectData from './ProjectData';\r\n\r\nclass Toolbar extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        results: {}\r\n      }\r\n\r\n      this.hasFiles = props.hasFiles;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"ToolbarContainer\">\r\n            <div className=\"ToolbarInner\">\r\n                <h1>📋abacus board</h1>\r\n            </div>\r\n            <div className=\"ToolbarInner\" style={{marginLeft: \"25px\"}}>\r\n                <ProjectData data={this.props.projectData} />\r\n            </div>\r\n            { this.hasFiles &&\r\n              <div className=\"ToolbarInner\">\r\n                {/* <FileDialogue buttonLabel='Regenerate' /> */}\r\n              </div>\r\n            }\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Toolbar;","import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n//import {useDropzone} from 'react-dropzone';\r\n\r\n// File loading drag'n'drop interface\r\n\r\nclass FileDropzone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDrop = (files) => {\r\n            this.setState({ files });\r\n            this.sendData();\r\n        };\r\n        this.state = {\r\n            files: []\r\n        };\r\n    }\r\n\r\n    sendData() {\r\n        this.props.parentCallback(this.state.files);\r\n    }\r\n\r\n    render() {\r\n        const files = this.state.files.map(file => (\r\n            <li key={file.name}>\r\n                {file.name} - {file.size} bytes\r\n            </li>\r\n        ));\r\n\r\n        return (\r\n            <Dropzone onDrop={this.onDrop}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <section className=\"dropzoneContainer\">\r\n                        <div {...getRootProps({ className: 'dropzone' })}>\r\n                            <input {...getInputProps()} />\r\n                            <p>drag 'n' drop or click to select file(s)</p>\r\n                        </div>\r\n                    </section>\r\n                )}\r\n            </Dropzone>\r\n        );\r\n    }\r\n}\r\n\r\n/*const FileDropzone = props => {\r\n\tconst {acceptedFiles, rejectedFiles, getRootProps, getInputProps} = useDropzone({accept: '.json'});\r\n  \r\n\tconst acceptedFilesItems = acceptedFiles.map(file => (\r\n\t\t<li key={file.path}>\r\n\t\t\t{file.path} - {file.size} bytes\r\n\t\t</li>\r\n\t));\r\n\r\n\tconst rejectedFilesItems = rejectedFiles.map(file => (\r\n\t\t<li key={file.path}>\r\n\t\t\t{file.path} - {file.size} bytes\r\n\t\t</li>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<section className=\"container\">\r\n\t\t\t<div {...getRootProps({className: 'dropzone'})}>\r\n\t\t\t\t<input {...getInputProps()} />\r\n\t\t\t\t<p>drag 'n' drop or click to select file(s)</p>\r\n\t\t\t\t<em>(only *.json files will be accepted)</em>\r\n\t\t\t</div>\r\n\t\t\t<aside>\r\n\t\t\t\t<h4>Accepted files</h4>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{acceptedFilesItems}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<h4>Rejected files</h4>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{rejectedFilesItems}\r\n\t\t\t\t</ul>\r\n\t\t\t</aside>\r\n\t\t</section>\r\n\t);\r\n};*/\r\nexport default FileDropzone;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n\n// Top-Level Components\nimport Layout from './Layout';\nimport Toolbar from './Toolbar';\nimport FileDropzone from './FileDropzone';\n\n//const ThemeContext = React.createContext('light');\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: {}\n    }\n    this.state = {\n      isInitialized: false,\n      hasParsed: false,\n      files: [],\n      projectData: {},\n      buildDemo: false,\n    };\n  }\n\n  onFilesLoaded = (acceptedFiles) => {\n    this.setState((state) => {\n      return { \n        isInitialized: true, \n        hasParsed: this.state.hasParsed, \n        files: acceptedFiles, \n        projectData: this.state.projectData,\n        buildDemo: false,\n      }\n    });\n  }\n\n  onFilesParsed = (data) => {\n    this.setState((state) => {\n      return { \n        isInitialized: this.state.isInitialized, \n        hasParsed: true,\n        files: this.state.files,\n        projectData: data,\n        buildDemo: false,\n      }\n    });\n  }\n\n  startDemo = () => {\n    this.setState((state) => {\n      return { \n        isInitialized: true, \n        hasParsed: this.state.hasParsed, \n        files: ['D:/Abacus Board/abacus-board/exampleInput.json'], \n        projectData: this.state.projectData,\n        buildDemo: true,\n      }\n    });\n  }\n\n  // render the toolbar and swap between layout and file dropzone depending on if files have been read\n  render() {\n    return (\n      <div>\n        <Toolbar id=\"toolbar\" hasFiles={this.state.isInitialized} projectData={this.state.projectData} />\n        { this.state.isInitialized\n          ? <Layout parentCallback={this.onFilesParsed}  files={this.state.files} buildDemo={this.state.buildDemo} />\n          : (\n            <div>\n              <FileDropzone parentCallback={this.onFilesLoaded} />\n              <div className='footer'>\n                <a href=\"#\" className=\"demo-button\" onClick={this.startDemo}>load demo</a>\n              </div>\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nimport 'golden-layout/src/css/goldenlayout-base.css'\nimport 'golden-layout/src/css/goldenlayout-dark-theme.css'\n\nReactDOM.render(\n  <App />,                          // Render our App component\n  document.getElementById('root'),  // using the HTML doc's element with the id 'root'\n  function()                        // and execute this afterwards\n  {\n    console.log(\"abacus board v.1.0.0a\");\n  }\n);\n\nwindow.React = React;\nwindow.ReactDOM = ReactDOM;\n\n//registerServiceWorker();\n\n/* ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); */\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}